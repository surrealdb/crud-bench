name: Benchmark

on:
  workflow_dispatch:
  schedule:
    - cron: '0 6 * * *'

concurrency:
  # Use github.run_id on main branch
  # Use github.event.pull_request.number on pull requests, so it's unique per pull request
  # Use github.ref on other branches, so it's unique per branch
  group: ${{ github.workflow }}-${{ github.ref == 'refs/heads/main' && github.run_id || github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:

  build:
    name: Build crud-bench
    runs-on: [ runner-amd64-2xlarge-private ]
    steps:
      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Setup cache
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
          save-if: ${{ github.ref == 'refs/heads/main' }}

      - name: Build benchmark
        run: cargo build --release --target x86_64-unknown-linux-gnu --features surrealdb/kv-mem,surrealdb/kv-rocksdb,surrealdb/kv-surrealkv

      - name: Store artifacts
        run: cp target/x86_64-unknown-linux-gnu/release/crud-bench crud-bench

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: crud-bench
          path: crud-bench

  benchmark:
    name: Benchmark ${{ matrix.description }}
    needs: build
    runs-on: [ runner-amd64-2xlarge-private ]
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        include:
          # Dragonfly
          - database: dragonfly
            enabled: true
            description: Dragonfly
          # Dry
          - database: dry
            enabled: true
            description: Dry
          # KeyDB
          - database: keydb
            enabled: true
            description: KeyDB
          # Map
          - database: map
            enabled: true
            description: Map
          # MongoDB
          - database: mongodb
            enabled: true
            description: MongoDB
          # Postgres
          - database: postgres
            enabled: true
            description: Postgres
          # Redb
          - database: redb
            enabled: false
            description: Redb
          # Redis
          - database: redis
            enabled: true
            description: Redis
          # RocksDB
          - database: rocksdb
            enabled: true
            description: RocksDB
          # Scylladb
          - database: scylladb
            enabled: false
            description: ScyllaDB
          # SurrealDB + Memory
          - database: surrealdb-memory
            enabled: true
            description: SurrealDB with in-memory storage
          # SurrealDB + RocksDB
          - database: surrealdb-rocksdb
            enabled: true
            description: SurrealDB with RocksDB storage
          # SurrealDB + SurrealKV
          - database: surrealdb-surrealkv
            enabled: true
            description: SurrealDB with SurrealKV storage
          # SurrealDB Memory Engine
          - database: surrealdb
            enabled: true
            endpoint_cfg: -e memory
            description: SurrealDB embedded with in-memory storage
          # SurrealDB RocksDB Rngine
          - database: surrealdb
            enabled: true
            endpoint_cfg: -e rocksdb:/tmp/rocksdb-engine
            description: SurrealDB embedded with RocksDB storage
          # SurrealDB SurrealKV Engine
          - database: surrealdb
            enabled: true
            endpoint_cfg: -e surrealkv:/tmp/surrealkv-engine
            description: SurrealDB embedded with in-SurrealKV storage
          # SurrealKV
          - database: surrealkv
            enabled: true
            description: SurrealKV
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ${{ github.workspace }}/artifacts
          merge-multiple: true

      - name: Set file permissions
        run: chmod +x ${{ github.workspace }}/artifacts/crud-bench

      # 5,000,000 records

      - name: Run benchmarks (5,000,000 samples / 128 clients / 48 threads / key integer / random)
        timeout-minutes: 30
        if: ${{ matrix.enabled }}
        run: ${{ github.workspace }}/artifacts/crud-bench -d ${{ matrix.database }} ${{ matrix.endpoint_cfg || '' }} -s 5000000 -c 128 -t 48 -k integer -r

      - name: Run benchmarks (5,000,000 samples / 128 clients / 48 threads / key string26 / random)
        timeout-minutes: 30
        if: ${{ matrix.enabled }}
        run: ${{ github.workspace }}/artifacts/crud-bench -d ${{ matrix.database }} ${{ matrix.endpoint_cfg || '' }} -s 5000000 -c 128 -t 48 -k string26 -r

      - name: Run benchmarks (5,000,000 samples / 128 clients / 48 threads / key string90 / random)
        timeout-minutes: 30
        if: ${{ matrix.enabled }}
        run: ${{ github.workspace }}/artifacts/crud-bench -d ${{ matrix.database }} ${{ matrix.endpoint_cfg || '' }} -s 5000000 -c 128 -t 48 -k string90 -r

      - name: Run benchmarks (5,000,000 samples / 128 clients / 48 threads / key string506 / random)
        timeout-minutes: 30
        if: ${{ matrix.enabled }}
        run: ${{ github.workspace }}/artifacts/crud-bench -d ${{ matrix.database }} ${{ matrix.endpoint_cfg || '' }} -s 5000000 -c 128 -t 48 -k string506 -r

      - name: Run benchmarks (5,000,000 samples / 128 clients / 48 threads / key string26 / random / 1.5KiB row and object size)
        timeout-minutes: 30
        if: ${{ matrix.enabled }}
        run: ${{ github.workspace }}/artifacts/crud-bench -d ${{ matrix.database }} ${{ matrix.endpoint_cfg || '' }} -s 5000000 -c 128 -t 48 -k string26 -r
        env:
          CRUD_BENCH_VALUE: '{ "text": "text:50", "integer": "int", "nested": { "text": "text:1000", "array": [ "string:50", "string:50", "string:50", "string:50", "string:50" ] } }'

      - name: Finish benchmarking
        run: echo "Complete"
        if: success() || failure()